diff --git a/.vscode/launch.json b/.vscode/launch.json
new file mode 100644
index 00000000..3675e699
--- /dev/null
+++ b/.vscode/launch.json
@@ -0,0 +1,35 @@
+{
+    // Use IntelliSense to learn about possible attributes.
+    // Hover to view descriptions of existing attributes.
+    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
+    "version": "0.2.0",
+    "configurations": [
+        {
+            "name": "Python Debugger: Attach using Process Id",
+            "type": "debugpy",
+            "request": "attach",
+            "processId": "${command:pickProcess}"
+        },
+        {
+            "name": "Python Debugger: Attach using Process Id",
+            "type": "debugpy",
+            "request": "attach",
+            "processId": "${command:pickProcess}"
+        },
+        {
+            "name": "Python Debugger: Remote Attach",
+            "type": "debugpy",
+            "request": "attach",
+            "connect": {
+                "host": "localhost",
+                "port": 5678
+            },
+            "pathMappings": [
+                {
+                    "localRoot": "${workspaceFolder}",
+                    "remoteRoot": "."
+                }
+            ]
+        }
+    ]
+}
diff --git a/diff.txt b/diff.txt
new file mode 100644
index 00000000..e69de29b
diff --git a/landscape/client/package/reporter.py b/landscape/client/package/reporter.py
index b784317b..01dd64f5 100644
--- a/landscape/client/package/reporter.py
+++ b/landscape/client/package/reporter.py
@@ -654,6 +654,22 @@ class PackageReporter(PackageTaskHandler):
         return False
 
     def _compute_packages_changes(self):  # noqa: max-complexity: 13
+        import cProfile
+        import pstats
+
+        profile = cProfile.Profile()
+        profile.enable()
+        result = self.compute_packages_change_inner()
+        profile.disable()
+
+        output_path = "/tmp/lib/landscape/client/result.txt"
+        with open(output_path, "w") as fp:
+            stats = pstats.Stats(profile, stream=fp)
+            stats.strip_dirs().sort_stats("cumulative").print_stats()
+
+        return result
+
+    def compute_packages_change_inner(self):
         """Analyse changes in the universe of known packages.
 
         This method will verify if there are packages that:
@@ -705,14 +721,11 @@ class PackageReporter(PackageTaskHandler):
             # support pinning, but we don't yet. In the mean time, we
             # ignore backports, so that packages don't get automatically
             # upgraded to the backports version.
-            backport_origins = [
-                origin
-                for origin in package.origins
-                if origin.archive == backports_archive
-            ]
-            if backport_origins and (
-                len(backport_origins) == len(package.origins)
-            ):
+            archives = [a[0].archive for a in package._cand.file_list]
+            backports_origins = all(
+                archive == backports_archive for archive in archives
+            )
+            if backports_origins:
                 # Ignore the version if it's only in the official
                 # backports archive. If it's somewhere else as well,
                 # e.g. a PPA, we assume it was added manually and the
@@ -736,10 +749,11 @@ class PackageReporter(PackageTaskHandler):
 
                 # Is this package present in the security pocket?
                 security_origins = any(
-                    origin
-                    for origin in package.origins
-                    if origin.archive == security_archive
+                    archive
+                    for archive in archives
+                    if archive == security_archive
                 )
+
                 if security_origins:
                     current_security.add(id)
 
diff --git a/landscape/client/watchdog.py b/landscape/client/watchdog.py
index 911ee0df..14c9ee8b 100644
--- a/landscape/client/watchdog.py
+++ b/landscape/client/watchdog.py
@@ -728,10 +728,16 @@ def run(args=sys.argv, reactor=None):
     if IS_SNAP:
         config.auto_configure(retry=True)
 
+    import debugpy
+
+    debugpy.listen(("0.0.0.0", 5678))
+
     application = Application("landscape-client")
     watchdog_service = WatchDogService(config)
     watchdog_service.setServiceParent(application)
 
+
+
     if reactor is None:
         from twisted.internet import reactor
     # We add a small delay to work around a Twisted bug: this method should
diff --git a/landscape/lib/apt/package/tests/test_facade.py b/landscape/lib/apt/package/tests/test_facade.py
index 60cdc79b..cbe9d2b8 100644
--- a/landscape/lib/apt/package/tests/test_facade.py
+++ b/landscape/lib/apt/package/tests/test_facade.py
@@ -22,6 +22,7 @@ from landscape.lib.apt.package.facade import DependencyError
 from landscape.lib.apt.package.facade import LandscapeInstallProgress
 from landscape.lib.apt.package.facade import TransactionError
 from landscape.lib.apt.package.testing import AptFacadeHelper
+from landscape.lib.apt.package.store import PackageStore
 from landscape.lib.apt.package.testing import create_deb
 from landscape.lib.apt.package.testing import create_simple_repository
 from landscape.lib.apt.package.testing import HASH1
@@ -137,6 +138,7 @@ class AptFacadeTest(
         super().setUp()
         self.facade.max_dpkg_retries = 0
         self.facade.dpkg_retry_sleep = 0
+        self.store = PackageStore(self.makeFile())
 
     def version_sortkey(self, version):
         """Return a key by which a Version object can be sorted."""
@@ -976,6 +978,28 @@ class AptFacadeTest(
         self.assertEqual(HASH1, skeleton1.get_hash())
         self.assertEqual(HASH2, skeleton2.get_hash())
 
+    def benchmark(self):
+        """
+        Benchmark test for performance.
+        """
+        import time
+
+        NUM_PKGS = 10000
+        self.facade.clear_channels()
+        start = time.perf_counter()
+
+        for i in range(NUM_PKGS):
+            name = f"test-{i}"
+            self._add_system_package(name)
+            self._hash_packages_by_name(
+                package_name=name, store=self.store, facade=self.facade
+            )
+
+        self.facade.reload_channels()
+        self.facade.get_packages()
+
+        self.fail(f"\nRuntime: {(time.perf_counter() - start)} s\n")
+
     def test_get_package_hash(self):
         """
         C{get_package_hash} returns the hash for a given package.
diff --git a/root-client.conf b/root-client.conf
index a0efcdbc..9cf79bd2 100644
--- a/root-client.conf
+++ b/root-client.conf
@@ -1,14 +1,20 @@
 [client]
 bus = system
-computer_title = John's PC
+computer_title = Test Noble
 account_name = onward
-registration_key =
-url = http://localhost:8080/message-system
-package_hash_id_url = http://localhost:8080/hash-id-databases
-data_path = /tmp/landscape-root
-log_dir = /tmp/landscape-root
+registration_key = world
+exchange_interval = 200
+url = http://10.19.80.111:8080/message-system
+ping_url = http://10.19.80.111:8081/ping
+data_path = /tmp/lib/landscape/client/
+package_hash_id_url = http://10.19.80.111:9090/hash-id-databases
+pid_file = /tmp/run/landscape/landscape-client.pid
+log_dir = /tmp/log/landscape/
 log_level = debug
-pid_file = /tmp/landscape-root/landscape-client.pid
-ping_url = http://localhost:8080/ping
-include_manager_plugins = ScriptExecution
-script_users = www-data, nobody, root
+manager_plugins = ALL
+monitor_plugins = ALL
+package_monitor_interval = 1000
+apt_update_interval = 300
+script_users = ALL
+ping_interval = 10
+flush_interval = 200
